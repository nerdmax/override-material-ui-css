{"version":3,"sources":["/home/travis/build/nerdmax/override-material-ui-css/docs/index.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_nerdmax_override_material_ui_css_node_modules_docz_core_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","isMDXComponent"],"mappings":"2XAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,wBADR,wBAGAL,OAAAE,EAAA,EAAAF,CAAA,kBACEA,OAAAE,EAAA,EAAAF,CAAA,KAAGM,WAAW,cAAaN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CAC7CC,KAAQ,6BADe,eAA3B,qDAE8EP,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CAChGC,KAAQ,mCADkE,OAF9E,0HAI2IP,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAJ3I,qCAIoON,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAJpO,0FAIiXN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAJjX,6EAMFN,OAAAE,EAAA,EAAAF,CAAA,yJAAoJA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAApJ,0BAAkON,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAAlO,kDACAN,OAAAE,EAAA,EAAAF,CAAA,+CAA0CA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CAC5DC,KAAQ,gDAD8B,gBAA1C,iLAE2MP,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kBAF3M,kBAGAN,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,wGACHN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,YADR,YAGAL,OAAAE,EAAA,EAAAF,CAAA,gDACAA,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACrBC,KAAQ,4CADT,2DAGHP,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACrBC,KAAQ,yCADT,6NAMPX,EAAWY,gBAAiB","file":"static/js/docs-index.1a1649ba.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"why-use-this-library\"\n    }}>{`Why use this library`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"https://material-ui.com/\"\n        }}>{`Material-UI`}</a>{` is a cool react component library and it's using `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/cssinjs/jss\"\n        }}>{`JSS`}</a>{` as styling solution. The CSS injected by Material-UI to style a component has the highest specificity possible as the `}<inlineCode parentName=\"p\">{`<style>`}</inlineCode>{` is injected at the bottom of the `}<inlineCode parentName=\"p\">{`<head>`}</inlineCode>{` to ensure the components always render correctly. You need to change the order of the `}<inlineCode parentName=\"p\">{`<style>`}</inlineCode>{` injected by Material-UI if you want to override the it's default style.`}</p>\n    </blockquote>\n    <p>{`This library is a wrapper component which only takes the children prop and renders it without any modification but just moving Material-UI's `}<inlineCode parentName=\"p\">{`<style>`}</inlineCode>{` tag to the top of the `}<inlineCode parentName=\"p\">{`<head>`}</inlineCode>{` tag. It will make overriding style very easy.`}</p>\n    <p>{`PS: OverrideMaterialUICss will add `}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/style/css-baseline/\"\n      }}>{`CSS Baseline`}</a>{`. It's provided by Material-UI to kickstart an elegant, consistent, and simple baseline to build upon. It's not a must have thing and you can disable this feature by setting `}<inlineCode parentName=\"p\">{`useCssBaseline`}</inlineCode>{` to false. Eg:`}</p>\n    <p><inlineCode parentName=\"p\">{`<OverrideMaterialUICss useCssBaseline={false}> <button>testButton</button> </OverrideMaterialUICss>`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`Check the examples in the side bar.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"./docs-without-override-material-ui-css\"\n      }}>{`Customised Material-UI's button without this component`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"./docs-with-override-material-ui-css\"\n      }}>{`Customised Material-UI's button with this component`}</a></p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}