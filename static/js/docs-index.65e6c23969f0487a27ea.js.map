{"version":3,"sources":["webpack:///./docs/index.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href"],"mappings":"25CAKqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,yBAAvD,wBACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,GACtCE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,cAAaN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,IAAInB,MAAO,CAACoB,KAAO,6BAAvE,eAAjE,qDAAmPP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,IAAInB,MAAO,CAACoB,KAAO,mCAAvE,OAAnP,0HAAweP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,WAAxe,qCAAmmBN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,UAAnmB,0FAAkxBN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,WAAlxB,6EAEAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,gJAA0LE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,WAA1L,0BAA0SN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,UAA1S,kDACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,sCAAgFE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,IAAInB,MAAO,CAACoB,KAAO,gDAAvE,gBAAhF,iLAAkZP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,kBAAlZ,kBAAigBN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,wGACjgBN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,aAAvD,YACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B","file":"static/js/docs-index.9a3a64b9.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"why-use-this-library\"}}>{`Why use this library`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\"><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://material-ui.com/\"}}>{`Material-UI`}</MDXTag>{` is a cool react component library and it's using `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/cssinjs/jss\"}}>{`JSS`}</MDXTag>{` as styling solution. The CSS injected by Material-UI to style a component has the highest specificity possible as the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<style>`}</MDXTag>{` is injected at the bottom of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<head>`}</MDXTag>{` to ensure the components always render correctly. You need to change the order of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<style>`}</MDXTag>{` injected by Material-UI if you want to override the it's default style.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This library is a wrapper component which only takes the children prop and renders it without any modification but just moving Material-UI's `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<style>`}</MDXTag>{` tag to the top of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<head>`}</MDXTag>{` tag. It will make overriding style very easy.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`PS: OverrideMaterialUICss will add `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://material-ui.com/style/css-baseline/\"}}>{`CSS Baseline`}</MDXTag>{`. It's provided by Material-UI to kickstart an elegant, consistent, and simple baseline to build upon. It's not a must have thing and you can disable this feature by setting `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useCssBaseline`}</MDXTag>{` to false. Eg: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<OverrideMaterialUICss useCssBaseline={false}> <button>testButton</button> </OverrideMaterialUICss>`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"examples\"}}>{`Examples`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Check the examples in the side bar.`}</MDXTag>\n{/* [Customised Material-UI's button without this component](./docs-without-override-material-ui-css)\n\n[Customised Material-UI's button with this component](./docs-with-override-material-ui-css) */}\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}